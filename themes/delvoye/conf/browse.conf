#
cache_timeout = 0
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
		},
		sortBy = {
			Date = ca_objects.date,
			Title = ca_object_labels.name,
			Identifier = ca_objects.idno,
			
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = asc,
			Identifier = asc,
			Title = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		
		# --- Paging can be: nextprevious, letter or continuous (default)
		paging = nextprevious
	},
	publications = {
		displayName = _(Publications),
		labelSingular = _("publication"),
 		labelPlural = _("publications"),
		table = ca_objects,
		
		restrictToTypes = [publication],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
		},
		sortBy = {
			Date = ca_objects.date,
			Title = ca_object_labels.name,
			Identifier = ca_objects.idno,
			
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = asc,
			Identifier = asc,
			Title = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		
		# --- Paging can be: nextprevious, letter or continuous (default)
		paging = nextprevious
	},
	entities = {
		displayName = _(People/Orgs),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [gallery, individual],
		availableFacets = [],
		
		
		showLetterBarFrom = ca_entities.preferred_labels.surname,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			list = {}
		},
		
		sortBy = {
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		
		# --- Paging can be: nextprevious, letter or continuous (default)
		paging = letter
	},
	events = {
		displayName = _(Events),
		labelSingular = _("event"),
 		labelPlural = _("events"),
		table = ca_occurrences,
		restrictToTypes = [event],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {}
		},
		
		options = {
			selectMediaUsingRelationshipTypes = [cover]
		},
		sortBy = {
			Date = ca_occurrences.date,
			Title = ca_occurrences.preferred_labels.name,
			Identifier = ca_occurrences.idno,
			
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = asc,
			Identifier = asc,
			Title = asc,
		},
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [artwork_category],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {}
		},
		
		sortBy = {
			Name = ca_collections.preferred_labels.displayname
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		
		# --- Paging can be: nextprevious, letter or continuous (default)
		paging = nextprevious,
		
		dontShowChildren=1
	},
}

ca_objects = {
	name = _("Objects"),
	facets = {
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [artwork_category,publication],
			
			group_mode = hierarchical,

			label_singular = _("Collection"),
			label_plural = _("Collections"),
			description = _("Find objects according to the Collections they belong to."),
		},	
		event_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurences,
			restrict_to_types = [event],
			
			group_mode = none,

			label_singular = _("Event"),
			label_plural = _("Events"),
			description = _("Find objects according to the Events they belong to."),
		},	
		material_facet = {
			type = attribute,
			element_code = material_aat,

			group_mode = none,
			
			label_singular = _("Material"),
			label_plural = _("Material")
		},				
	}
}
ca_occurrences = {
	name = _("Events"),
	facets = {	
		date_facet = {
			type = normalizedDates,
			element_code = date,
			
			normalization = decades,
			group_mode = none,
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			requires = date_facet,
			normalization = years,
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years")
		},							
	}
}
ca_collections = {
	name = _("Artwork categories"),
	facets = {
	
	}
}
ca_entities = {
	name = _("People"),
	facets = {	
					
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

placeholder_media_icon = <i class='fa fa-picture-o fa-2x'></i>

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browse_menu_format =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =