cache_timeout = 0

#
# 
#
browseTypes = {
	all_objects = {
		displayName = _("All Objects"),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels</l>",
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	entities = {
		displayName = _(People & Organisations),
		labelSingular = _("person & organisation"),
 		labelPlural = _("people & organisation"),
		table = ca_entities,
		restrictToTypes = [],
		showLetterBarFrom = ca_entity_labels.name_sort,
		showLetterBarSorts = [ca_entity_labels.name_sort],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<l>^ca_entities.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Name = ca_entity_labels.name_sort
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		}
	},
	video = {
		displayName = _(Video),
		labelSingular = _("video"),
 		labelPlural = _("videos"),
		table = ca_objects,
		
		restrictToTypes = [analogue_vid],
		dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels</l>",
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	events = {
		displayName = _("Programs & Events"),
		labelSingular = _("Program & Event"),
 		labelPlural = _("Programs & Events"),
		table = ca_occurrences,
		restrictToTypes = [event],
		#showLetterBarFrom = ca_occurrence_labels.name,
		#showLetterBarSorts = [ca_occurrence_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<ifdef code='ca_occurrences.occurrence_date'><small><l>^ca_occurrences.occurrence_date</l></small><br/></ifdef><l>^ca_occurrences.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Name = ca_occurrence_labels.name,
			Date = ca_occurrences.occurrence_date
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc,
			Date = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		}
	},
	objects = {
		displayName = _("Documents, Images, & Objects"),
		labelSingular = _("Document, Image, & Object"),
 		labelPlural = _("Documents, Images, & Objects"),
		table = ca_objects,
		
		restrictToTypes = [analogue_doc, analogue_image, object],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels</l>",
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =


# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("Object Type"),
			label_plural = _("Object Types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		genre_facet = {
			type = attribute,
			element_code = genre,
			group_mode = alphabetical,

			indefinite_article = a,
			label_singular = _("Genre"),
			label_plural = _("Genres")
		
		},
		year_facet = {
			type = normalizedDates,
			element_code = search_date,
			normalization = years,
			group_mode = none,

			label_singular = _("year"),
			label_plural = _("years"),
			requires = decade_facet
        },
		decade_facet = {
			type = normalizedDates,
			element_code = search_date,
			normalization = decades,
			group_mode = none,

			label_singular = _("decade"),
			label_plural = _("decades")
        },
		subject_facet = {
			type = attribute,
			element_code = subjects,
			group_mode = alphabetical,

			indefinite_article = a,
			label_singular = _("Subject"),
			label_plural = _("Subjects")		
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			#single_value = 1,
			group_mode = none,
			
			label_yes = _("Yes"),
			label_no = _("No"),
			
			label_singular = _("Media available?"),
			label_plural = _("Media available?")
		},	
		event_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			natural_sort = 0,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("Event depicted"),
			label_plural = _("Events depicted"),
		},	
		entity_facet_ind = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [ind],
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = a,
			label_singular = _("Related person"),
			label_plural = _("Related people"),
		},	
		entity_facet_group = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [group],
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = a,
			label_singular = _("Related group"),
			label_plural = _("Related groups"),
		},	
		entity_facet_ind_com = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [indigenous_com],
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = a,
			label_singular = _("Related Indigenous Community"),
			label_plural = _("Related Indigenous Communities"),
		}


	}
}

# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	name = _("Entities"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		role_facet = {
			type = attribute,
			element_code = VIVO_role_gen,
			group_mode = alphabetical,

			indefinite_article = a,
			label_singular = _("Role at VIVO"),
			label_plural = _("Roles at VIVO")
		
		},
		entity_facet_rel_group = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_entities,
			restrict_to_types = [group],
			
			group_mode = alphabetical,
			
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Related Group"),
			label_plural = _("Related Groups")
		},
		entity_facet_rel_ind_comm = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_entities,
			restrict_to_types = [indigenous_com],
			
			group_mode = alphabetical,
			
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Related Indigenous Community"),
			label_plural = _("Related Indigenous Communities")
		}
	}
}
# --------------------------------------------------------------------
# Configuration for occurrence browse
ca_occurrences = {
	name = _("Other authorities"),
	facets = {
		year_facet = {
			type = normalizedDates,
			element_code = occurrence_date,
			normalization = years,
			group_mode = none,

			label_singular = _("year"),
			label_plural = _("years"),
			requires = decade_facet
        },
		decade_facet = {
			type = normalizedDates,
			element_code = occurrence_date,
			normalization = decades,
			group_mode = none,

			label_singular = _("decade"),
			label_plural = _("decades")
        },
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			relative_to = ca_objects,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			#single_value = 1,
			group_mode = none,
			
			label_yes = _("Yes"),
			label_no = _("No"),
			
			label_singular = _("Media available?"),
			label_plural = _("Media available?")
		},	
		entity_facet_ind = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [ind],
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = a,
			label_singular = _("Related person"),
			label_plural = _("Related people"),
		},	
		entity_facet_group = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [group],
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = a,
			label_singular = _("Related group"),
			label_plural = _("Related groups"),
		},	
		entity_facet_ind_com = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [indigenous_com],
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = a,
			label_singular = _("Related Indigenous Community"),
			label_plural = _("Related Indigenous Communities"),
		}
	}
}
# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	name = _("Collections"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}