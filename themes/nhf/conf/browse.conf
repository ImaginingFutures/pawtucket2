cache_timeout = 43200

#
# 
#
browseTypes = {
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		showLetterBarFrom = ca_collection_labels.name,
		showLetterBarSorts = [ca_collection_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			list = {},
			list_long = {}
		},
		
		sortBy = {
			Name = ca_collection_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	occurrences = {
		displayName = _(Works),
		labelSingular = _("work"),
 		labelPlural = _("works"),
		table = ca_occurrences,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list_long = {}
		},
		
		sortBy = {
			Name = ca_occurrence_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
}


# Configuration for collection browse
ca_collections = {
	name = _(Collections),
	facets = {
		decade_facet = {
			type = normalizedDates,
			element_code = collection_datespan,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _(decade),
			label_plural = _(decades)
		},
		year_facet = {
			type = normalizedDates,
			element_code = collection_datespan,
			normalization = year,
			requires = [decade_facet],
			
			group_mode = none,
			
			label_singular = _(year),
			label_plural = _(years)
		},
		genre_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_relationship_types = [genre],
			
			group_mode = alphabetical,
			order_by_label_fields = [name_singular],
			
			label_singular = _(genre),
			label_plural = _(genres)
		},
		subject_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_relationship_types = [subject],
			
			group_mode = alphabetical,
			order_by_label_fields = [name_singular],
			
			label_singular = _(subject),
			label_plural = _(subjects)
		},
		geoloc_facet = {
			type = attribute,
			element_code = georeference,
			restrict_to_types = [],
			
			group_mode = alphabetical,

			label_singular = _(place),
			label_plural = _(places)
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename],
			
			indefinite_article = an,
			label_singular = _(people and organizations),
			label_plural = _(people and organizations)
		}
	}
}
# Configuration for occurrence browse
ca_occurrences = {
	name = _(Works),
	facets = {
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			order_by_label_fields = [name],

			label_singular = _("collection"),
			label_plural = _("collections"),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = occ_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _(decade),
			label_plural = _(decades)
		},
		year_facet = {
			type = normalizedDates,
			element_code = occ_date,
			normalization = year,
			requires = [decade_facet],
			
			group_mode = none,
			
			label_singular = _(year),
			label_plural = _(years)
		},		
#		date_coverage_facet = {
#			type = attribute,
#			element_code = coverage,
#			
#			group_mode = none,
#			
#			multiple = 1,
#			
#			label_singular = _(dates),
#			label_plural = _(dates)
#		},
		genre_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_relationship_types = [genre],
			
			group_mode = alphabetical,
			order_by_label_fields = [name_singular],
			
			multiple = 1,
			
			label_singular = _(genre),
			label_plural = _(genres)
		},
		subject_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_relationship_types = [subject],
			
			group_mode = alphabetical,
			order_by_label_fields = [name_singular],
			
			multiple = 1,
			
			label_singular = _(subject),
			label_plural = _(subjects)
		},
		geoloc_facet = {
			type = attribute,
			element_code = georeference,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			multiple = 1,

			label_singular = _(place),
			label_plural = _(places)
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename],
			
			indefinite_article = an,
			label_singular = _(people and organizations),
			label_plural = _(people and organizations)
		}
	}
}
views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 50

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =