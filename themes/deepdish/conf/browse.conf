cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		showLetterBarFrom = ca_object_labels.name_sort,
		showLetterBarSorts = [ca_object_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			map = {
				data = ca_objects.georeference,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					description_template = <p>^ca_objects.description</p>,
					icon = <div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div>	
				}
			},
			timeline = {
				data = ca_objects.creation_date,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					description_template = <p>^ca_objects.description</p>,
					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	entities = {
		displayName = _(People/Orgs),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [],
		showLetterBarFrom = ca_entity_labels.surname,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}, 
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},	
}
ca_objects = {
	name = _("Objects"),
	facets = {
		label_facet = {
			type = label,
			preferred_labels_only = 1,
			
			restrict_to_types = [program],
			
			group_mode = alphabetical,

			label_singular = _("program"),
			label_plural = _("programs"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		series_facet = {
			type = label,
			preferred_labels_only = 1,
			
			restrict_to_types = [series],
			
			group_mode = alphabetical,

			label_singular = _("series"),
			label_plural = _("series"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = productionDate,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},			
		year_facet = {
			type = normalizedDates,
			element_code = productionDate,
			normalization = years,
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},					
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		project_facet = {
			type = attribute,
			element_code = project,
			
			group_mode = none,

			label_singular = _("project"),
			label_plural = _("projects"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		location_facet = {
			type = attribute,
			element_code = location,
			
			group_mode = none,

			label_singular = _("location"),
			label_plural = _("locations"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		language_facet = {
			type = attribute,
			element_code = pbcoreLanguage,
			
			group_mode = none,

			label_singular = _("language"),
			label_plural = _("languages"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},						
		keyword_facet = {
			type = attribute,
			element_code = keywords,
			
			group_mode = none,

			label_singular = _("keyword"),
			label_plural = _("keywords"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		},
	}
}
ca_entities = {
	name = _("Entities"),
	facets = {
		label_facet = {
			type = label,
			preferred_labels_only = 1,
			
			restrict_to_types = [program],
			
			group_mode = alphabetical,

			label_singular = _("name"),
			label_plural = _("names"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
	}
}	
views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =