dontAllowRegistration = 1
dontAllowRegistrationAndLogin = 0
dontAllowRegistration = 1
dont_approve_logins_on_registration = 1

# Set this to disable the "classroom" feature
disable_classroom = 1

#
# Set this if you want urls that refer to specified items to use the identifier 
# rather than CollectiveAccess internal ID. The former is more descriptive but will
# not work if you have duplicate identifiers in your catalogue!
#
use_identifiers_in_urls = 0

dont_enforce_access_settings = 1

pawtucket_requires_login = 1

#
# Front page set code
#
front_page_set_code = frontPage

#
# Allow PHP code in content-managed site pages
#
# By default only value tags in the form {{{tag-name}}} are allowed in Pawtucket site page templates. 
# If you need the flexibility and power afforded by direct embedding of PHP code in your templates
# set this option to a non-zero value. Note that enabling this option will allow execution of ANY
# code embedded in the template on EVERY page load. Depending upon your point of view this is either a
# feature or a security hole. It doesn't have to be a problem, but keep it in mind...
#
allow_php_in_site_page_templates = 0


#
# Configuration for Excel (xlsx) and PowerPoint (pptx) export formats
# PDF formats are configured using templates in app/printTemplates
# (See http://docs.collectiveaccess.org/wiki/PDF_Output)
#
export_formats = {
	ca_objects = {
		basic_excel = {
			name = Excel (basic information),
			type = xlsx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.small
				},
				Artist = {
					template = "<unit relativeTo='ca_entities' restrictToRelationshipTypes='artist'>^ca_entities.preferred_labels</unit>"
				},
				Work_Code= {
					template = ^ca_objects.idno
				},								
				Title = {
					template = ^ca_objects.preferred_labels.name
				},
				Year = {
					template = ^ca_objects.creation_date
				},	
				Medium = {
					template = ^ca_objects.medium
				},							
				Dimensions = {
					template = "<ifcount code='ca_objects.dimensions' min='1'><unit><ifdef code='ca_objects.dimensions.dimensions_height'>^ca_objects.dimensions.dimensions_height H</ifdef><ifdef code='ca_objects.dimensions.dimensions_width'> x ^ca_objects.dimensions.dimensions_width W</ifdef><ifdef code='ca_objects.dimensions.dimensions_depth'> x ^ca_objects.dimensions.dimensions_depth D</ifdef> <ifdef code='ca_objects.dimensions.height_in|ca_objects.dimensions.width_in|ca_objects.dimensions.depth_in'>(</ifdef><ifdef code='ca_objects.dimensions.height_in'>^ca_objects.dimensions.height_in H</ifdef><ifdef code='ca_objects.dimensions.width_in'> x ^ca_objects.dimensions.width_in W</ifdef><ifdef code='ca_objects.dimensions.depth_in'> x ^ca_objects.dimensions.depth_in D</ifdef><ifdef code='ca_objects.dimensions.height_in|ca_objects.dimensions.width_in|ca_objects.dimensions.depth_in'>)</ifdef><ifdef code='ca_objects.dimensions.dimensions_weight'>, ^ca_objects.dimensions.dimensions_weight Weight</ifdef><ifdef code='ca_objects.dimensions.dimensions_notes'><br/>^ca_objects.dimensions.dimensions_notes</ifdef></unit></ifcount>"
				},
				Type = {
					template = ^ca_objects.art_types
				},	
				Group = {
					template = ^ca_objects.group
				}										
			}
		},
		basic_ppt = {
			name = PowerPoint (basic information),
			type = pptx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.mediumlarge,
					width = 3.5in,
					height = 3.5in,
					x = 0.5in,
					y = 1.5in
				},
				Description = {
					template = <unit restrictToRelationshipTypes="artist">^ca_entities.preferred_labels</unit><br/>^ca_objects.preferred_labels.name<br/>^ca_objects.creation_date<br/>^ca_objects.medium<br/><ifcount code="ca_objects.dimensions" min="1"><unit><ifdef code="ca_objects.dimensions.dimensions_height">^ca_objects.dimensions.dimensions_height H</ifdef><ifdef code="ca_objects.dimensions.dimensions_width"> x ^ca_objects.dimensions.dimensions_width W</ifdef><ifdef code="ca_objects.dimensions.dimensions_depth"> x ^ca_objects.dimensions.dimensions_depth D</ifdef> <ifdef code="ca_objects.dimensions.height_in|ca_objects.dimensions.width_in|ca_objects.dimensions.depth_in">(</ifdef><ifdef code="ca_objects.dimensions.height_in">^ca_objects.dimensions.height_in H</ifdef><ifdef code="ca_objects.dimensions.width_in"> x ^ca_objects.dimensions.width_in W</ifdef><ifdef code="ca_objects.dimensions.depth_in"> x ^ca_objects.dimensions.depth_in D</ifdef><ifdef code="ca_objects.dimensions.height_in|ca_objects.dimensions.width_in|ca_objects.dimensions.depth_in">)</ifdef><ifdef code="ca_objects.dimensions.dimensions_weight">, ^ca_objects.dimensions.dimensions_weight Weight</ifdef><ifdef code="ca_objects.dimensions.dimensions_notes"><br/>^ca_objects.dimensions.dimensions_notes</ifdef></unit></ifcount>,
					width = 3in,
					height = 5in,
					x = 6.5in,
					y = 1.5in,
					size = 12px,
					color = FF000000,
					align = left
				}
			}
		}
	}
}


#
# Display template used to format information text at bottom of media overlay. Template is evaluated relative to the item with which the media is
# associated. If left blank preferred label + identifier of the item associated with the media is displayed.
#
media_overlay_titlebar_template =

#
# Representation versions to provide download option for in media viewer. If omitted then no download control is displayed
# (Uncomment the directive below to enable downloads)
#
#ca_object_representation_download_versions = [original]

#
# Configuration for image comparison interface. Set first key to table name (for now only ca_objects are supported)
# and second level keys to option names with values. 
# 
compare_images = {
	ca_objects = {
		# template to use when displaying object name within compare interface
		title_template = ^ca_objects.preferred_labels.name
	}
}

# 
# Configuration for registration security method
# This can either be set to sum_equation (for basic arithmetic challenge question: 4+7=?) or captcha, which implements a Google reCaptcha
# If you select reCaptcha, you will have to register the application and provide two API keys to allow google to process the captcha
# You can do so at https://www.google.com/recaptcha
#

registration_security = sum_equation
google_recaptcha_sitekey = 
google_recaptcha_secretkey = 


global_template_values = {
	guide_to_use_text = {
		name = Guide To Use Text,
		description = Guide To Use Text,
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	}
}
