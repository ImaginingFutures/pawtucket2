cache_timeout = 0
#
# 
#
browseTypes = {
	#occurrences = {
	#	displayName = _(Works),
	#	labelSingular = _("work"),
 	#	labelPlural = _("works"),
	#	table = ca_occurrences,
	#	restrictToTypes = [work],
	#	
	#	# formats available for display of results
	#	# possible values are: images, list, timeline, map
	#	views = {
	#		list = {}
	#	},
	#	
	#	sortBy = {
	#		Relevance = _natural,
	#		Identifier = ca_occurrences.idno,
	#		Name = ca_occurrence_labels.name
	#	},
	#	# --- sortControlType = dropdown or list
	#	sortControlType = dropdown
	#},
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			timeline = {
				data = ca_objects.creation_date,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					description_template = <p>^ca_objects.description</p>,
					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
}
ca_occurrences = {
	name = _("Works"),
	facets = {
		type_facet = {
			type = attribute, 
			element_code = workType,
			group_mode = none,
			exclude_values = [null],
			label_singular = _("Work type"),
			label_plural = _("Work types")
		},	
		restriction_facet = {
			type = attribute, 
			element_code = restrictions,
			group_mode = none,
			facet_groups = ,
			label_singular = _("Restriction"),
			label_plural = _("Restrictions")
		},
		depicts_facet = {
			type = attribute, 
			element_code = sniDepiction,
			group_mode = none,
			facet_groups = ,
			label_singular = _("SI Depicted"),
			label_plural = _("SI Depicted")
		},
		place_facet = {
			type = authority,
			
			table = ca_places,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			exclude_values = [root_node],
			
			group_mode = none,
			
			facet_groups = ,
			
			label_singular = _("Place"),
			label_plural = _("Places")
		},
#		location_facet = {
#			type = attribute, 
#			element_code = location,
#			group_mode = none,
#			facet_groups = ,
#			label_singular = _("Location"),
#			label_plural = _("Locations")
#		},					
		lcsh_facet = {
			type = attribute, 
			element_code = lcsh_subjects,
			group_mode = none,
			facet_groups = ,
			label_singular = _("LCSH Subjects"),
			label_plural = _("LCSH Subjects")
		},
		subjects_facet = {
			type = attribute, 
			element_code = lcsh_names,
			group_mode = none,
			facet_groups = ,
			label_singular = _("LCSH Name"),
			label_plural = _("LCSH Names")
		},	
		date_facet = {
			type = normalizedDates,
			element_code = dates_value,
			
			normalization = years,
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},	
#		genre_facet = {
#			type = attribute, 
#			element_code = genre,
#			group_mode = none,
#			exclude_values = [null],
#			label_singular = _("Genre"),
#			label_plural = _("Genres"),
#		},	   
		color_facet = {
			type = attribute, 
			element_code = color,
			relative_to = ca_objects,
			group_mode = none,
			exclude_values = [not_specified],
			label_singular = _("Color"),
			label_plural = _("Colors"),
		},		
		production_facet = {
			type = attribute, 
			element_code = productionTypes,
			group_mode = none,
			exclude_values = [na],
			label_singular = _("Production Type"),
			label_plural = _("Production Types")
		},	
		
		missing_critical = {
			type = attribute,
			element_code = mission.missionCritical,
			
			group_mode = none,
			
			label_singular = _("Mission critical"),
			label_plural = _("Mission critical")
		},
		missing_critical_year = {
			type = normalizedDates,
			normalization = years,
			element_code = mission.missionYear,
			requires = [missing_critical],
			
			group_mode = none,
			
			label_singular = _("Mission critical year"),
			label_plural = _("Mission critical year")
		}	,
		award_facet = {
			type = attribute, 
			element_code = award_event,
			group_mode = none,
			label_singular = _("Award"),
			label_plural = _("Awards")
		},	
		distribution_facet = {
			type = attribute, 
			element_code = distribution_list,
			group_mode = none,
			label_singular = _("Distribution Status"),
			label_plural = _("Distribution Status")
		},															
	}
}
ca_objects = {
	name = _("Objects"),
	facets = {	
		worktype_facet = {
			type = attribute,
			element_code = workType,
			relative_to = ca_occurrences,
			exclude_values = [null],
			multiple = 1,
			group_mode = none,
			label_singular = _("Work Type"),
			label_plural = _("Work Types")
		},
		resolution_facet = {
			type = attribute,
			element_code = essenceTrackFrameSize,
			#restrict_to_types = [facet],
			group_mode = none,
			exclude_values = [option0],

			multiple = 1,
			
			label_singular = _("Resolution"),
			label_plural = _("Resolutions")
		},
		date_facet = {
			type = normalizedDates,
			element_code = dates_value,
			relative_to = ca_occurrences,
			normalization = years,
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},
#		location_facet = {
#			type = attribute,
#			element_code = legacyLocation,
#			relative_to = ca_occurrences,
#			group_mode = none,
#			
#			label_singular = _("Location"),
#			label_plural = _("Locations")
#		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relative_to = ca_occurrences,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			width = 300,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 2, 
			exclude_values = [SI-main],
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("SI Location"),
			label_plural = _("SI Locations"),
		},		
		production_facet = {
			type = attribute,
			element_code = productionTypes,
			exclude_values = [na],
			relative_to = ca_occurrences,
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Production Type"),
			label_plural = _("Productions Types")
		},
		,
		missing_critical = {
			type = attribute,
			relative_to = ca_occurrences,
			element_code = mission.missionCritical,
			
			group_mode = none,
			
			label_singular = _("Mission critical"),
			label_plural = _("Mission critical")
		},
		missing_critical_year = {
			type = normalizedDates,
			normalization = years,
			relative_to = ca_occurrences,
			element_code = mission.missionYear,
			requires = [missing_critical],
			
			group_mode = none,
			
			label_singular = _("Mission critical year"),
			label_plural = _("Mission critical year")
		},
#		genre_facet = {
#			type = attribute,
#			element_code = genre,
#			relative_to = ca_occurrences,
#			exclude_values = [null],
#			group_mode = none,
			
#			label_singular = _("Genre"),
#			label_plural = _("Genres")
#		},
		dist_facet = {
			type = attribute,
			element_code = distribution_status,
			relative_to = ca_occurrences,
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Distribution Status"),
			label_plural = _("Distribution Status")
		},
#		item_format_facet = {
#			type = attribute,
#			element_code = video_physical,
##			group_mode = none,
#			facet_groups = ,
#			exclude_values = [not_specified],
#			label_singular = _("Item Format - Physical "),
#			label_plural = _("Item Formats - Physical ")
#		},
#		digital_facet = {
#			type = attribute,
#			element_code = item_format_digital,
#			group_mode = none,
#			facet_groups = ,
#			exclude_values = [not_specified],
#			label_singular = _("Item Format - Digital"),
#			label_plural = _("Item Format - Digital")
#		},
#		recorder_facet = {
#			type = attribute,
#			element_code = recorder_model,
#			group_mode = none,
#
##			label_singular = _("Recorder Model"),
#			label_plural = _("Recorder Models")
#		},																					
		color_facet = {
			type = attribute,
			element_code = color,
			group_mode = none,
			multiple = 1,
			exclude_values = [option0],
			label_singular = _("Color"),
			label_plural = _("Colors")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_types = [],
			relative_to = ca_occurrences,
			
			individual_group_display = 0,
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			width = 300,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			multiple = 1,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("Keyword"),
			label_plural = _("Keywords"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},			
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			#single_value = 1,
			group_mode = none,
			
			label_yes = _("Has media"),
			label_no = _("Has no media"),
			
			label_singular = _("Has media"),
			label_plural = _("Has media")
		}
#		physical_facet = {
#			type = attribute,
#			element_code = physical,
#			group_mode = none,
#			facet_groups = ,
#			exclude_values = [not_specified],
#			label_singular = _("Supporting Material Format"),
#			label_plural = _("Supporting Material Formats")
#		},
#		supporting_facet = {
#			type = attribute,
#			element_code = digital_supporting,
#			group_mode = none,
#			facet_groups = ,
#			exclude_values = [not_specified],
#			label_singular = _("Supporting Material Digital Format"),
#			label_plural = _("Supporting Material Digital Formats")
#		},								
#		type_facet = {
#			type = fieldList,
#			field = type_id,
#			
#			group_mode = none,
#			
#			label_singular = _("Type"),
#			label_plural = _("Types")
#		},						
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browse_menu_format =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class = col-sm-8 col-md-9 col-lg-9

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class = col-sm-4 col-md-3 col-lg-3 