#
# 
#


cache_timeout = 86400

browseTypes = {
	objects = {
		displayName = _(Specimen),
		labelSingular = _("specimen"),
 		labelPlural = _("specimens"),
		table = ca_objects,
		
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			map = {
				name = map,
				icon = glyphicon-globe,
				data = ca_objects.georeference,
				width = 100%,
				height = 600px,
				display = {
					title_template = ^ca_objects.idno,
					description_template = <div style='float:right; margin-left: 8px;'><l>^ca_object_representations.media.preview</l></div> <p><l>^ca_objects.idno</l><br/>^ca_objects.taxonomy_specimen.scientific_name (^ca_objects.taxonomy_specimen.vernacular_name)</p>		
				}
			},
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_objects.scientific_name,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

placeholder_media_icon = <i class='fa fa-picture-o fa-2x'></i>

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browse_menu_format = list

# --- refine_position -> set to left|right|top to assign position of browse refine col - defaults to: right
refine_position = left

# --- refine_col_class -> boostrap cold class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class = col-sm-8 col-md-9

# --- refine_col_class -> boostrap cold class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class = col-sm-4 col-md-3




#
# Browse configuration
#

# number of hits to be loaded per page/ajax load
defaultHitsPerBlock = 36

# number of seconds to keep cached browses around
# set to 0 to disable caching

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {,
		fossil_or_modern_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = fossil_or_modern,
			
			facet_groups = [],
			group_mode = alphabetical,
			precache = 1,
			
			indefinite_article = a,
			label_singular = _(Fossil/modern),
			label_plural = _(Fossil/modern),
			description = _("The type of specimen, whether a fossil or a modern preserved specimen collected in the field")
		},
		vernacular_name_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = vernacular_name,
			
			facet_groups = [],
			group_mode = alphabetical,
			precache = 1,
			multiple = 1,
			open_in_panel = 1,
			
			indefinite_article = a,
			label_singular = _(Common name),
			label_plural = _(Common name),
			description = _("The common vernacular name of the specimen")
		},
		system_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = system,
			
			facet_groups = [],
			group_mode = alphabetical,
			precache = 1,
			multiple = 1,
			open_in_panel = 1,
			
			indefinite_article = a,
			label_singular = _(period),
			label_plural = _(period),
			description = _("A length of geologic time (e.g. the Jurassic Period), covering several Epochs, and which is shorter than an Era") 
		},
		continent_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = continent,
			
			facet_groups = [],
			group_mode = alphabetical,
			precache = 1,
			
			indefinite_article = a,
			label_singular = _(continent),
			label_plural = _(continent),
			description = _("The contient where a specimen was found, or if applicable, the body of water")
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			precache = 1,
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("has media"),
			label_plural = _("has media"),
			description = _("Find objects that have associated media."),
		},
	#	country_facet = {
	#		# 'type' can equal authority, attribute, fieldList, normalizedDates
	#		type = attribute,		
	#		element_code = country_loc,
	#		
	#		facet_groups = [],
	#		group_mode = alphabetical,
	#		
	#		indefinite_article = a,
	#		label_singular = _(country),
	#		label_plural = _(country)
	#	},
	#	stateProvince_facet = {
	#		# 'type' can equal authority, attribute, fieldList, normalizedDates
	#		type = attribute,		
	#		element_code = state_province,
	#		
	#		facet_groups = [],
	#		requires = [country_facet],
	#		group_mode = alphabetical,
	#		
	#		indefinite_article = a,
	#		label_singular = _(state/province),
	#		label_plural = _(state/province)
	#	},
	#	county_facet = {
	#		# 'type' can equal authority, attribute, fieldList, normalizedDates
	#		type = attribute,		
	#		element_code = county,
	#		
	#		facet_groups = [],
	#		requires = [country_facet, stateProvince_facet],
	#		group_mode = alphabetical,
	#		
	#		indefinite_article = a,
	#		label_singular = _(county),
	#		label_plural = _(county)
	#	},
		genus_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = genus,
			
			facet_groups = [],
			group_mode = alphabetical,
			precache = 1,
			multiple = 1,
			open_in_panel = 1,
			
			indefinite_article = a,
			label_singular = _(genus),
			label_plural = _(genus),
			description = _("Select to filter by Genus") 
		},
		formation_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = formation,
			
			facet_groups = [],
			#requires = [country_facet, county_facet, stateProvince_facet,genus_facet],
			group_mode = alphabetical,
			precache = 1,
			multiple = 1,
			open_in_panel = 1,
			
			indefinite_article = a,
			label_singular = _(fossil deposit),
			label_plural = _(fossil deposit),
			description = _("Select to filter by the lithostratigraphic formation specimens were found in")
		},
		locality_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = locality,
			precache = 1,
			multiple = 1,
			open_in_panel = 1,
			
			facet_groups = [],
			requires = [country_facet, county_facet, stateProvince_facet,genus_facet],
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(locality),
			label_plural = _(locality),
			description = _("Select to filter by the geographic locality specimens were found in")
		},
		source_id_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = fieldList,
			field = source_id,
			
			precache = 1,
			multiple = 1,
			open_in_panel = 1,
			
			group_mode = none,
			
			label_singular = _(source),
			label_plural = _(source),
			description = _("Select to filter by the institution holding the specimens")
		}
	}
}
