#                          _                       __
#                         | |                     / _|
#  ___  ___  __ _ _ __ ___| |__    ___ ___  _ __ | |_
# / __|/ _ \/ _` | '__/ __| '_ \  / __/ _ \| '_ \|  _|
# \__ \  __/ (_| | | | (__| | | || (_| (_) | | | | |
# |___/\___|\__,_|_|  \___|_| |_(_)___\___/|_| |_|_|
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Pawtucket 2.0
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Search configuration file
#
# Info @ http://docs.collectiveaccess.org/wiki/Pawtucket2:Configuration
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

# number of seconds to keep cached searches around
# set to 0 to disable caching
cache_timeout = 86400

# Path to search index configuration file – the file that
# determines what data gets indexed for search
search_indexing_config = <ca_conf_dir>/search_indexing.conf

# Maximum number of records to buffer indexing for before
# writing out to search engine. Generally, larger numbers provide better
# performance up to a point, at the expense of memory footprint. Larger 
# values may cause issues with some engines. If you are experiencing errors while 
# indexing, excessive memory use or lost indexing trying reducing the value of 
# this setting and then reindex.
#
max_indexing_buffer_size = 50000

# -------------------
# SqlSearch Plugin Configuration
# -------------------

# Set to 0 if you don't want search input stemmed (ie. suffixes removed) prior to search
# The plugin uses the English Snoball stemmer (http://snowball.tartarus.org/) and can give
# poor results with non-English content. If you are cataloguing non-English material you
# will probably want to turn this off.
search_sql_search_do_stemming = 1


# -------------------
# ElasticSearch Plugin Configuration
# -------------------

# enter the elastic search base url here (without any index names)
search_elasticsearch_base_url = http://localhost:9200/

# This is the name of the ElasticSearch index used by CollectiveAccess.
# You probably don't need to change this unless you're using a single 
# ElasticSearch setup for multiple CollectiveAccess instances and/or
# other applications.
search_elasticsearch_index_name = collectiveaccess

# Indexing buffer size setting specifically for ElasticSearch
elasticsearch_indexing_buffer_size = 250

# -------------------
# General search and indexing behavior (all plugins)
# -------------------
# Suffixes to add to searches if they conform to a listed regular expression
search_suffixes = {
#	[\d]+\.[0-9A-Za-z\.]* = *
}

# Create a single index entry for all instances of a term in a field. 
#
# By default an index entry is created for each repetition of a term. The entries includes 
# locations of repeated term within the field. This location data supports "strict" phrase 
# searching, where results are only returned for records with the phrase terms present in 
# the searched-upon sequence. 
# 
# Grouping index entries for repeating values in a field may reduce the size of the search 
# index and improve performance, but will disable strict phrase searches. In their stead
# all records containing the specified search terms *anywhere* in the specified field will
# be returned. (Only supported in SqlSearch2)
#
group_index_for_repeating_terms_in_field =  1

# Stop words are common terms unlikely to selective and therefore filtered from search input 
# prior to execution of the search. Filtering stop words may reduce the size of the search
# index and improve performance. However, it may adversely affect search accuracy and 
# relevance if the stop word list contents terms significant for current content.
#
# Stop words will be applied to all cataloguing languages for which a word list is defined
# at https://github.com/voku/stop-words
use_stop_words = 0

# Regular expression defining characters to be considered whitespace when indexing using 
# the SqlSearch2 search engine plugin
whitespace_tokenizer_regex = "[\\s\"\\—]+"

# Regular expression defining punctuation characters to be stripped prior to indexing using
# the SqlSearch2 search engine plugin
punctuation_tokenizer_regex = "[\\.,;:\\(\\)\{\\}\[\\]\\|\\\\\\+_\\!\\&«»\\']+"

# List of regular expressions that if matched cause search input to be treated "as-is" - searched without processing
# This is useful for preventing tokenization of accession numbers and other values that rely upon punctuation being
# kept intact.
asis_regexes = [
	"^[\\d]+[\\.\\-][A-Za-z0-9\\.\\-]+$",
	"[^\\.]+\\.[A-Za-z0-9]{3}$"
]

# Set if when only a single item found you do not want to redirect the user directly to that item
dont_redirect_to_single_search_result = 0